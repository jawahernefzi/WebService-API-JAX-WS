
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Banque", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Banque {


    /**
     * 
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "convertir", targetNamespace = "http://service/", className = "services.Convertir")
    @ResponseWrapper(localName = "convertirResponse", targetNamespace = "http://service/", className = "services.ConvertirResponse")
    @Action(input = "http://service/Banque/convertirRequest", output = "http://service/Banque/convertirResponse")
    public double convertir(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verser", targetNamespace = "http://service/", className = "services.Verser")
    @ResponseWrapper(localName = "verserResponse", targetNamespace = "http://service/", className = "services.VerserResponse")
    @Action(input = "http://service/Banque/verserRequest", output = "http://service/Banque/verserResponse")
    public double verser(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns services.Compte
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rechercher", targetNamespace = "http://service/", className = "services.Rechercher")
    @ResponseWrapper(localName = "rechercherResponse", targetNamespace = "http://service/", className = "services.RechercherResponse")
    @Action(input = "http://service/Banque/rechercherRequest", output = "http://service/Banque/rechercherResponse")
    public Compte rechercher(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0);

    /**
     * 
     * @return
     *     returns java.util.List<services.Compte>
     */
    @WebMethod(operationName = "Comptes")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Comptes", targetNamespace = "http://service/", className = "services.Comptes")
    @ResponseWrapper(localName = "ComptesResponse", targetNamespace = "http://service/", className = "services.ComptesResponse")
    @Action(input = "http://service/Banque/ComptesRequest", output = "http://service/Banque/ComptesResponse")
    public List<Compte> comptes();

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "listeCodes", targetNamespace = "http://service/", className = "services.ListeCodes")
    @ResponseWrapper(localName = "listeCodesResponse", targetNamespace = "http://service/", className = "services.ListeCodesResponse")
    @Action(input = "http://service/Banque/listeCodesRequest", output = "http://service/Banque/listeCodesResponse")
    public void listeCodes();

    /**
     * 
     * @param arg0
     */
    @WebMethod(operationName = "AjoutComptes")
    @RequestWrapper(localName = "AjoutComptes", targetNamespace = "http://service/", className = "services.AjoutComptes")
    @ResponseWrapper(localName = "AjoutComptesResponse", targetNamespace = "http://service/", className = "services.AjoutComptesResponse")
    @Action(input = "http://service/Banque/AjoutComptesRequest", output = "http://service/Banque/AjoutComptesResponse")
    public void ajoutComptes(
        @WebParam(name = "arg0", targetNamespace = "")
        List<Compte> arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod(operationName = "MAJ")
    @RequestWrapper(localName = "MAJ", targetNamespace = "http://service/", className = "services.MAJ")
    @ResponseWrapper(localName = "MAJResponse", targetNamespace = "http://service/", className = "services.MAJResponse")
    @Action(input = "http://service/Banque/MAJRequest", output = "http://service/Banque/MAJResponse")
    public void maj(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retirer", targetNamespace = "http://service/", className = "services.Retirer")
    @ResponseWrapper(localName = "retirerResponse", targetNamespace = "http://service/", className = "services.RetirerResponse")
    @Action(input = "http://service/Banque/retirerRequest", output = "http://service/Banque/retirerResponse")
    public double retirer(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

}
